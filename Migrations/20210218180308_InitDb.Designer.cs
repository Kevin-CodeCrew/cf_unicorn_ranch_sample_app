// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnicornRanch.Data;

namespace UnicornRanch.Migrations
{
    [DbContext(typeof(UnicornFarmDbContext))]
    [Migration("20210218180308_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("UnicornRanch.Models.Location", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocationName")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("UnicornRanch.Models.UnicornModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CurrentLocationid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FavoriteSnack")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnicornName")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("CurrentLocationid");

                    b.ToTable("unicorns");
                });

            modelBuilder.Entity("UnicornRanch.Models.UnicornModel", b =>
                {
                    b.HasOne("UnicornRanch.Models.Location", "CurrentLocation")
                        .WithMany()
                        .HasForeignKey("CurrentLocationid");

                    b.Navigation("CurrentLocation");
                });
#pragma warning restore 612, 618
        }
    }
}
